module attributes {llvm.data_layout = ""} {
  llvm.func @verifier.error()
  llvm.func @nd_bv64() -> i64
  llvm.func @nd_bv4() -> i4
  llvm.func @nd_bv1() -> i1
  llvm.func @nd_bv32() -> i32
  llvm.func @main() {
    %0 = llvm.mlir.constant(false) : i1
    %1 = llvm.mlir.constant(0 : i32) : i32
    %2 = llvm.mlir.constant(0 : i64) : i64
    %3 = llvm.mlir.constant(0 : i4) : i4
    llvm.br ^bb1(%0, %1, %0, %1, %2, %2, %0, %1, %1, %3, %3, %0, %0, %3, %3, %0, %0, %2, %2, %0, %3, %0, %1, %0, %3, %1, %3, %0, %3, %0 : i1, i32, i1, i32, i64, i64, i1, i32, i32, i4, i4, i1, i1, i4, i4, i1, i1, i64, i64, i1, i4, i1, i32, i1, i4, i32, i4, i1, i4, i1)
  ^bb1(%4: i1, %5: i32, %6: i1, %7: i32, %8: i64, %9: i64, %10: i1, %11: i32, %12: i32, %13: i4, %14: i4, %15: i1, %16: i1, %17: i4, %18: i4, %19: i1, %20: i1, %21: i64, %22: i64, %23: i1, %24: i4, %25: i1, %26: i32, %27: i1, %28: i4, %29: i32, %30: i4, %31: i1, %32: i4, %33: i1):  // 2 preds: ^bb0, ^bb2
    %34 = llvm.mlir.constant(true) : i1
    %35 = llvm.call @nd_bv32() : () -> i32
    %36 = llvm.select %6, %5, %35 : i1, i32
    %37 = llvm.mlir.constant(0 : i32) : i32
    %38 = llvm.call @nd_bv32() : () -> i32
    %39 = llvm.select %6, %12, %38 : i1, i32
    %40 = llvm.call @nd_bv32() : () -> i32
    %41 = llvm.call @nd_bv1() : () -> i1
    %42 = llvm.select %6, %10, %41 : i1, i1
    %43 = llvm.mlir.constant(true) : i1
    %44 = llvm.xor %42, %43  : i1
    %45 = llvm.select %44, %40, %39 : i1, i32
    %46 = llvm.call @nd_bv1() : () -> i1
    %47 = llvm.select %46, %45, %39 : i1, i32
    %48 = llvm.call @nd_bv32() : () -> i32
    %49 = llvm.select %6, %11, %48 : i1, i32
    %50 = llvm.call @nd_bv32() : () -> i32
    %51 = llvm.select %44, %50, %49 : i1, i32
    %52 = llvm.select %46, %51, %49 : i1, i32
    %53 = llvm.and %52, %47  : i32
    %54 = llvm.mlir.constant(1 : i2) : i2
    %55 = llvm.mlir.constant(1 : i4) : i4
    %56 = llvm.call @nd_bv4() : () -> i4
    %57 = llvm.select %6, %13, %56 : i1, i4
    %58 = llvm.call @nd_bv4() : () -> i4
    %59 = llvm.select %6, %14, %58 : i1, i4
    %60 = llvm.select %44, %59, %57 : i1, i4
    %61 = llvm.select %46, %60, %57 : i1, i4
    %62 = llvm.icmp "eq" %61, %55 : i4
    %63 = llvm.mlir.constant(4 : i4) : i4
    %64 = llvm.icmp "eq" %61, %63 : i4
    %65 = llvm.mlir.constant(1 : i2) : i2
    %66 = llvm.zext %64 : i1 to i2
    %67 = llvm.shl %66, %65  : i2
    %68 = llvm.zext %62 : i1 to i2
    %69 = llvm.or %67, %68  : i2
    %70 = llvm.bitcast %69 : i2 to vector<2xi1>
    %71 = "llvm.intr.vector.reduce.xor"(%70) : (vector<2xi1>) -> i1
    %72 = llvm.mlir.constant(2 : i4) : i4
    %73 = llvm.icmp "eq" %61, %72 : i4
    %74 = llvm.mlir.constant(1 : i2) : i2
    %75 = llvm.zext %64 : i1 to i2
    %76 = llvm.shl %75, %74  : i2
    %77 = llvm.zext %73 : i1 to i2
    %78 = llvm.or %76, %77  : i2
    %79 = llvm.bitcast %78 : i2 to vector<2xi1>
    %80 = "llvm.intr.vector.reduce.xor"(%79) : (vector<2xi1>) -> i1
    %81 = llvm.mlir.constant(1 : i2) : i2
    %82 = llvm.zext %80 : i1 to i2
    %83 = llvm.shl %82, %81  : i2
    %84 = llvm.zext %71 : i1 to i2
    %85 = llvm.or %83, %84  : i2
    %86 = llvm.icmp "eq" %85, %54 : i2
    %87 = llvm.select %86, %53, %37 : i1, i32
    %88 = llvm.or %52, %47  : i32
    %89 = llvm.add %52, %47  : i32
    %90 = llvm.mlir.constant(-1 : i2) : i2
    %91 = llvm.icmp "eq" %85, %90 : i2
    %92 = llvm.select %91, %89, %88 : i1, i32
    %93 = llvm.mlir.constant(-2 : i2) : i2
    %94 = llvm.icmp "eq" %85, %93 : i2
    %95 = llvm.or %94, %91  : i1
    %96 = llvm.select %95, %92, %87 : i1, i32
    %97 = llvm.call @nd_bv64() : () -> i64
    %98 = llvm.select %6, %8, %97 : i1, i64
    %99 = llvm.call @nd_bv64() : () -> i64
    %100 = llvm.select %6, %9, %99 : i1, i64
    %101 = llvm.select %42, %100, %98 : i1, i64
    %102 = llvm.select %46, %101, %98 : i1, i64
    %103 = llvm.mlir.constant(32 : i64) : i64
    %104 = llvm.lshr %102, %103  : i64
    %105 = llvm.trunc %104 : i64 to i32
    %106 = llvm.call @nd_bv4() : () -> i4
    %107 = llvm.select %6, %17, %106 : i1, i4
    %108 = llvm.call @nd_bv4() : () -> i4
    %109 = llvm.select %6, %18, %108 : i1, i4
    %110 = llvm.select %42, %109, %107 : i1, i4
    %111 = llvm.select %46, %110, %107 : i1, i4
    %112 = llvm.mlir.constant(3 : i4) : i4
    %113 = llvm.lshr %111, %112  : i4
    %114 = llvm.trunc %113 : i4 to i1
    %115 = llvm.call @nd_bv1() : () -> i1
    %116 = llvm.select %6, %15, %115 : i1, i1
    %117 = llvm.call @nd_bv1() : () -> i1
    %118 = llvm.select %6, %16, %117 : i1, i1
    %119 = llvm.select %42, %118, %116 : i1, i1
    %120 = llvm.select %46, %119, %116 : i1, i1
    %121 = llvm.and %120, %114  : i1
    %122 = llvm.select %121, %105, %96 : i1, i32
    %123 = llvm.mlir.constant(3 : i4) : i4
    %124 = llvm.lshr %61, %123  : i4
    %125 = llvm.trunc %124 : i4 to i1
    %126 = llvm.mlir.constant(true) : i1
    %127 = llvm.xor %125, %126  : i1
    %128 = llvm.call @nd_bv1() : () -> i1
    %129 = llvm.select %6, %19, %128 : i1, i1
    %130 = llvm.call @nd_bv1() : () -> i1
    %131 = llvm.call @nd_bv1() : () -> i1
    %132 = llvm.call @nd_bv1() : () -> i1
    %133 = llvm.select %6, %20, %132 : i1, i1
    %134 = llvm.and %133, %131  : i1
    %135 = llvm.and %134, %130  : i1
    %136 = llvm.select %44, %135, %129 : i1, i1
    %137 = llvm.select %46, %136, %129 : i1, i1
    %138 = llvm.and %137, %127  : i1
    %139 = llvm.or %138, %121  : i1
    %140 = llvm.select %139, %122, %36 : i1, i32
    %141 = llvm.select %46, %140, %36 : i1, i32
    %142 = llvm.mlir.constant(false) : i1
    %143 = llvm.select %142, %37, %141 : i1, i32
    %144 = llvm.call @nd_bv32() : () -> i32
    %145 = llvm.mlir.constant(true) : i1
    %146 = llvm.xor %4, %145  : i1
    %147 = llvm.select %146, %144, %143 : i1, i32
    %148 = llvm.select %142, %142, %34 : i1, i1
    %149 = llvm.select %146, %142, %148 : i1, i1
    %150 = llvm.select %6, %29, %38 : i1, i32
    %151 = llvm.select %6, %25, %41 : i1, i1
    %152 = llvm.mlir.constant(true) : i1
    %153 = llvm.xor %151, %152  : i1
    %154 = llvm.select %6, %28, %58 : i1, i4
    %155 = llvm.mlir.constant(1 : i4) : i4
    %156 = llvm.lshr %154, %155  : i4
    %157 = llvm.trunc %156 : i4 to i1
    %158 = llvm.mlir.constant(2 : i4) : i4
    %159 = llvm.lshr %154, %158  : i4
    %160 = llvm.trunc %159 : i4 to i1
    %161 = llvm.and %160, %157  : i1
    %162 = llvm.or %160, %157  : i1
    %163 = llvm.mlir.constant(true) : i1
    %164 = llvm.xor %162, %163  : i1
    %165 = llvm.or %164, %161  : i1
    %166 = llvm.mlir.constant(0 : i4) : i4
    %167 = llvm.lshr %154, %166  : i4
    %168 = llvm.trunc %167 : i4 to i1
    %169 = llvm.or %168, %165  : i1
    %170 = llvm.mlir.constant(true) : i1
    %171 = llvm.xor %169, %170  : i1
    %172 = llvm.and %168, %164  : i1
    %173 = llvm.mlir.constant(3 : i4) : i4
    %174 = llvm.lshr %154, %173  : i4
    %175 = llvm.trunc %174 : i4 to i1
    %176 = llvm.or %175, %172  : i1
    %177 = llvm.or %176, %171  : i1
    %178 = llvm.select %6, %27, %132 : i1, i1
    %179 = llvm.and %178, %131  : i1
    %180 = llvm.and %179, %130  : i1
    %181 = llvm.and %180, %177  : i1
    %182 = llvm.and %181, %153  : i1
    %183 = llvm.select %182, %40, %150 : i1, i32
    %184 = llvm.select %46, %183, %150 : i1, i32
    %185 = llvm.select %6, %26, %48 : i1, i32
    %186 = llvm.select %182, %50, %185 : i1, i32
    %187 = llvm.select %46, %186, %185 : i1, i32
    %188 = llvm.and %187, %184  : i32
    %189 = llvm.select %6, %30, %56 : i1, i4
    %190 = llvm.and %180, %153  : i1
    %191 = llvm.select %190, %154, %189 : i1, i4
    %192 = llvm.select %46, %191, %189 : i1, i4
    %193 = llvm.icmp "eq" %192, %55 : i4
    %194 = llvm.icmp "eq" %192, %63 : i4
    %195 = llvm.mlir.constant(1 : i2) : i2
    %196 = llvm.zext %194 : i1 to i2
    %197 = llvm.shl %196, %195  : i2
    %198 = llvm.zext %193 : i1 to i2
    %199 = llvm.or %197, %198  : i2
    %200 = llvm.bitcast %199 : i2 to vector<2xi1>
    %201 = "llvm.intr.vector.reduce.xor"(%200) : (vector<2xi1>) -> i1
    %202 = llvm.icmp "eq" %192, %72 : i4
    %203 = llvm.mlir.constant(1 : i2) : i2
    %204 = llvm.zext %194 : i1 to i2
    %205 = llvm.shl %204, %203  : i2
    %206 = llvm.zext %202 : i1 to i2
    %207 = llvm.or %205, %206  : i2
    %208 = llvm.bitcast %207 : i2 to vector<2xi1>
    %209 = "llvm.intr.vector.reduce.xor"(%208) : (vector<2xi1>) -> i1
    %210 = llvm.mlir.constant(1 : i2) : i2
    %211 = llvm.zext %209 : i1 to i2
    %212 = llvm.shl %211, %210  : i2
    %213 = llvm.zext %201 : i1 to i2
    %214 = llvm.or %212, %213  : i2
    %215 = llvm.icmp "eq" %214, %54 : i2
    %216 = llvm.select %215, %188, %37 : i1, i32
    %217 = llvm.or %187, %184  : i32
    %218 = llvm.add %187, %184  : i32
    %219 = llvm.icmp "eq" %214, %90 : i2
    %220 = llvm.select %219, %218, %217 : i1, i32
    %221 = llvm.icmp "eq" %214, %93 : i2
    %222 = llvm.or %221, %219  : i1
    %223 = llvm.select %222, %220, %216 : i1, i32
    %224 = llvm.select %6, %21, %97 : i1, i64
    %225 = llvm.select %6, %22, %99 : i1, i64
    %226 = llvm.select %6, %24, %108 : i1, i4
    %227 = llvm.mlir.constant(3 : i4) : i4
    %228 = llvm.lshr %226, %227  : i4
    %229 = llvm.trunc %228 : i4 to i1
    %230 = llvm.select %6, %23, %117 : i1, i1
    %231 = llvm.and %230, %229  : i1
    %232 = llvm.and %231, %151  : i1
    %233 = llvm.select %232, %225, %224 : i1, i64
    %234 = llvm.select %46, %233, %224 : i1, i64
    %235 = llvm.mlir.constant(32 : i64) : i64
    %236 = llvm.lshr %234, %235  : i64
    %237 = llvm.trunc %236 : i64 to i32
    %238 = llvm.select %6, %32, %106 : i1, i4
    %239 = llvm.and %230, %151  : i1
    %240 = llvm.select %239, %226, %238 : i1, i4
    %241 = llvm.select %46, %240, %238 : i1, i4
    %242 = llvm.mlir.constant(3 : i4) : i4
    %243 = llvm.lshr %241, %242  : i4
    %244 = llvm.trunc %243 : i4 to i1
    %245 = llvm.select %6, %31, %115 : i1, i1
    %246 = llvm.select %151, %230, %245 : i1, i1
    %247 = llvm.select %46, %246, %245 : i1, i1
    %248 = llvm.and %247, %244  : i1
    %249 = llvm.select %248, %237, %223 : i1, i32
    %250 = llvm.mlir.constant(3 : i4) : i4
    %251 = llvm.lshr %192, %250  : i4
    %252 = llvm.trunc %251 : i4 to i1
    %253 = llvm.mlir.constant(true) : i1
    %254 = llvm.xor %252, %253  : i1
    %255 = llvm.select %6, %33, %128 : i1, i1
    %256 = llvm.select %153, %180, %255 : i1, i1
    %257 = llvm.select %46, %256, %255 : i1, i1
    %258 = llvm.and %257, %254  : i1
    %259 = llvm.or %258, %248  : i1
    %260 = llvm.select %259, %249, %36 : i1, i32
    %261 = llvm.select %46, %260, %36 : i1, i32
    %262 = llvm.select %142, %37, %261 : i1, i32
    %263 = llvm.call @nd_bv32() : () -> i32
    %264 = llvm.select %146, %263, %262 : i1, i32
    %265 = llvm.mlir.constant(0 : i64) : i64
    %266 = llvm.select %142, %265, %102 : i1, i64
    %267 = llvm.call @nd_bv64() : () -> i64
    %268 = llvm.select %146, %267, %266 : i1, i64
    %269 = llvm.zext %47 : i32 to i64
    %270 = llvm.zext %52 : i32 to i64
    %271 = llvm.mul %270, %269  : i64
    %272 = llvm.call @nd_bv1() : () -> i1
    %273 = llvm.select %46, %272, %42 : i1, i1
    %274 = llvm.select %273, %271, %100 : i1, i64
    %275 = llvm.select %46, %274, %100 : i1, i64
    %276 = llvm.select %142, %265, %275 : i1, i64
    %277 = llvm.call @nd_bv64() : () -> i64
    %278 = llvm.select %146, %277, %276 : i1, i64
    %279 = llvm.select %142, %142, %273 : i1, i1
    %280 = llvm.call @nd_bv1() : () -> i1
    %281 = llvm.select %146, %280, %279 : i1, i1
    %282 = llvm.select %142, %37, %52 : i1, i32
    %283 = llvm.call @nd_bv32() : () -> i32
    %284 = llvm.select %146, %283, %282 : i1, i32
    %285 = llvm.select %142, %37, %47 : i1, i32
    %286 = llvm.call @nd_bv32() : () -> i32
    %287 = llvm.select %146, %286, %285 : i1, i32
    %288 = llvm.mlir.constant(0 : i4) : i4
    %289 = llvm.select %142, %288, %61 : i1, i4
    %290 = llvm.call @nd_bv4() : () -> i4
    %291 = llvm.select %146, %290, %289 : i1, i4
    %292 = llvm.call @nd_bv4() : () -> i4
    %293 = llvm.select %46, %292, %59 : i1, i4
    %294 = llvm.select %142, %288, %293 : i1, i4
    %295 = llvm.call @nd_bv4() : () -> i4
    %296 = llvm.select %146, %295, %294 : i1, i4
    %297 = llvm.select %142, %142, %120 : i1, i1
    %298 = llvm.call @nd_bv1() : () -> i1
    %299 = llvm.select %146, %298, %297 : i1, i1
    %300 = llvm.select %273, %137, %118 : i1, i1
    %301 = llvm.select %46, %300, %118 : i1, i1
    %302 = llvm.select %142, %142, %301 : i1, i1
    %303 = llvm.call @nd_bv1() : () -> i1
    %304 = llvm.select %146, %303, %302 : i1, i1
    %305 = llvm.select %142, %288, %111 : i1, i4
    %306 = llvm.call @nd_bv4() : () -> i4
    %307 = llvm.select %146, %306, %305 : i1, i4
    %308 = llvm.select %273, %61, %109 : i1, i4
    %309 = llvm.select %46, %308, %109 : i1, i4
    %310 = llvm.select %142, %288, %309 : i1, i4
    %311 = llvm.call @nd_bv4() : () -> i4
    %312 = llvm.select %146, %311, %310 : i1, i4
    %313 = llvm.select %142, %142, %137 : i1, i1
    %314 = llvm.call @nd_bv1() : () -> i1
    %315 = llvm.select %146, %314, %313 : i1, i1
    %316 = llvm.call @nd_bv1() : () -> i1
    %317 = llvm.select %46, %316, %133 : i1, i1
    %318 = llvm.select %142, %142, %317 : i1, i1
    %319 = llvm.call @nd_bv1() : () -> i1
    %320 = llvm.select %146, %319, %318 : i1, i1
    %321 = llvm.select %142, %265, %234 : i1, i64
    %322 = llvm.call @nd_bv64() : () -> i64
    %323 = llvm.select %146, %322, %321 : i1, i64
    %324 = llvm.zext %184 : i32 to i64
    %325 = llvm.zext %187 : i32 to i64
    %326 = llvm.mul %325, %324  : i64
    %327 = llvm.select %46, %272, %151 : i1, i1
    %328 = llvm.and %257, %252  : i1
    %329 = llvm.and %328, %327  : i1
    %330 = llvm.select %329, %326, %225 : i1, i64
    %331 = llvm.select %46, %330, %225 : i1, i64
    %332 = llvm.select %142, %265, %331 : i1, i64
    %333 = llvm.call @nd_bv64() : () -> i64
    %334 = llvm.select %146, %333, %332 : i1, i64
    %335 = llvm.select %327, %257, %230 : i1, i1
    %336 = llvm.select %46, %335, %230 : i1, i1
    %337 = llvm.select %142, %142, %336 : i1, i1
    %338 = llvm.call @nd_bv1() : () -> i1
    %339 = llvm.select %146, %338, %337 : i1, i1
    %340 = llvm.and %257, %327  : i1
    %341 = llvm.select %340, %192, %226 : i1, i4
    %342 = llvm.select %46, %341, %226 : i1, i4
    %343 = llvm.select %142, %288, %342 : i1, i4
    %344 = llvm.call @nd_bv4() : () -> i4
    %345 = llvm.select %146, %344, %343 : i1, i4
    %346 = llvm.select %142, %142, %327 : i1, i1
    %347 = llvm.call @nd_bv1() : () -> i1
    %348 = llvm.select %146, %347, %346 : i1, i1
    %349 = llvm.select %142, %37, %187 : i1, i32
    %350 = llvm.call @nd_bv32() : () -> i32
    %351 = llvm.select %146, %350, %349 : i1, i32
    %352 = llvm.mlir.constant(true) : i1
    %353 = llvm.xor %272, %352  : i1
    %354 = llvm.select %353, %316, %178 : i1, i1
    %355 = llvm.select %46, %354, %178 : i1, i1
    %356 = llvm.select %142, %142, %355 : i1, i1
    %357 = llvm.call @nd_bv1() : () -> i1
    %358 = llvm.select %146, %357, %356 : i1, i1
    %359 = llvm.select %316, %292, %154 : i1, i4
    %360 = llvm.select %46, %359, %154 : i1, i4
    %361 = llvm.select %142, %288, %360 : i1, i4
    %362 = llvm.call @nd_bv4() : () -> i4
    %363 = llvm.select %146, %362, %361 : i1, i4
    %364 = llvm.select %142, %37, %184 : i1, i32
    %365 = llvm.call @nd_bv32() : () -> i32
    %366 = llvm.select %146, %365, %364 : i1, i32
    %367 = llvm.select %142, %288, %192 : i1, i4
    %368 = llvm.call @nd_bv4() : () -> i4
    %369 = llvm.select %146, %368, %367 : i1, i4
    %370 = llvm.select %142, %142, %247 : i1, i1
    %371 = llvm.call @nd_bv1() : () -> i1
    %372 = llvm.select %146, %371, %370 : i1, i1
    %373 = llvm.select %142, %288, %241 : i1, i4
    %374 = llvm.call @nd_bv4() : () -> i4
    %375 = llvm.select %146, %374, %373 : i1, i4
    %376 = llvm.select %142, %142, %257 : i1, i1
    %377 = llvm.call @nd_bv1() : () -> i1
    %378 = llvm.select %146, %377, %376 : i1, i1
    %379 = llvm.select %6, %7, %35 : i1, i32
    %380 = llvm.icmp "eq" %36, %379 : i32
    %381 = llvm.mlir.constant(true) : i1
    %382 = llvm.xor %4, %381  : i1
    %383 = llvm.or %382, %380  : i1
    %384 = llvm.mlir.constant(true) : i1
    %385 = llvm.xor %383, %384  : i1
    %386 = llvm.and %34, %385  : i1
    %387 = llvm.mlir.constant(true) : i1
    %388 = llvm.xor %386, %387  : i1
    llvm.cond_br %388, ^bb2, ^bb3
  ^bb2:  // pred: ^bb1
    llvm.br ^bb1(%34, %147, %149, %264, %268, %278, %281, %284, %287, %291, %296, %299, %304, %307, %312, %315, %320, %323, %334, %339, %345, %348, %351, %358, %363, %366, %369, %372, %375, %378 : i1, i32, i1, i32, i64, i64, i1, i32, i32, i4, i4, i1, i1, i4, i4, i1, i1, i64, i64, i1, i4, i1, i32, i1, i4, i32, i4, i1, i4, i1)
  ^bb3:  // pred: ^bb1
    llvm.call @verifier.error() : () -> ()
    llvm.unreachable
  }
}

